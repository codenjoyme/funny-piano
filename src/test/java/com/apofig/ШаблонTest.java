package com.apofig;

import com.apofig.parser.Parser;
import com.apofig.октавы.ПерваяОктава;
import org.junit.Test;

import static junit.framework.Assert.assertEquals;

/**
 * User: sanja
 * Date: 26.07.13
 * Time: 22:34
 */
public class ШаблонTest {

    @Test
    public void test() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);

        Шаблон шаблон = Шаблон.подряд(c).потом(d);

        assertШаблон(шаблон, 0.5, 2,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!100]],\n" +
                "1.0=[[D4(50)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50)]");
    }

    private void assertНоты(Шаблон шаблон, String expected) {
        assertEquals(expected, шаблон.всеНоты().toString());
    }

    private void assertШаблон(Шаблон шаблон, double размерТика, int количество, String expected) {
        assertEquals(expected, шаблон.toString());
        assertEquals(размерТика, шаблон.размерТика());
        assertEquals(количество, шаблон.тиков());
    }

    @Test
    public void test2() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(d).потом(a);

        assertШаблон(шаблон, 0.25, 5,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!100]],\n" +
                "1.0=[[D4(50)!0], [A4(57)!100]],\n" +
                "1.25=[[A4(57)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test2_2() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c, d, a);

        assertШаблон(шаблон, 0.25, 5,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!100]],\n" +
                "1.0=[[D4(50)!0], [A4(57)!100]],\n" +
                "1.25=[[A4(57)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test3() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);

        Шаблон шаблон = Шаблон.подряд(c).вместе(Шаблон.подряд(d));

        assertШаблон(шаблон, 0.5, 1,
                "{0.0=[[C4(48)!100], [D4(50)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50)]");
    }

    @Test
    public void test4() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).вместе(Шаблон.подряд(d).потом(a));

        assertШаблон(шаблон, 0.25, 3,
                "{0.0=[[C4(48)!100], [D4(50)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!0], [A4(57)!100]],\n" +
                "0.75=[[A4(57)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test4_2() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).вместе(d, a);

        assertШаблон(шаблон, 0.25, 3,
                "{0.0=[[C4(48)!100], [D4(50)!100]],\n" +
                        "0.5=[[C4(48)!0], [D4(50)!0], [A4(57)!100]],\n" +
                        "0.75=[[A4(57)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test5() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук d = Длительность.половина(ПерваяОктава.D4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a).вместе(Шаблон.подряд(d).потом(a)).потом(c);

        assertШаблон(шаблон, 0.25, 5,
                "{0.0=[[C4(48)!100], [D4(50)!100]],\n" +
                "0.5=[[C4(48)!0], [D4(50)!0], [A4(57)!100]],\n" +
                "0.75=[[C4(48)!100], [A4(57)!0]],\n" +
                "1.25=[[C4(48)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test6() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a);
        Шаблон шаблон2 = шаблон.потом(шаблон);

        assertШаблон(шаблон2, 0.25, 6,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[C4(48)!100], [A4(57)!0]],\n" +
                "1.25=[[C4(48)!0], [A4(57)!100]],\n" +
                "1.5=[[A4(57)!0]]}");

        assertНоты(шаблон2, "[C4(48), A4(57)]");
    }

    @Test
    public void test6_2() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a);
        Шаблон шаблон2 = шаблон.потом(шаблон, шаблон);

        assertШаблон(шаблон2, 0.25, 9,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[C4(48)!100], [A4(57)!0]],\n" +
                "1.25=[[C4(48)!0], [A4(57)!100]],\n" +
                "1.5=[[C4(48)!100], [A4(57)!0]],\n" +
                "2.0=[[C4(48)!0], [A4(57)!100]],\n" +
                "2.25=[[A4(57)!0]]}");

        assertНоты(шаблон2, "[C4(48), A4(57)]");
    }

    @Test
    public void test6_3() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a);
        Шаблон шаблон2 = шаблон.повтор(3);

        assertШаблон(шаблон2, 0.25, 9,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[C4(48)!100], [A4(57)!0]],\n" +
                "1.25=[[C4(48)!0], [A4(57)!100]],\n" +
                "1.5=[[C4(48)!100], [A4(57)!0]],\n" +
                "2.0=[[C4(48)!0], [A4(57)!100]],\n" +
                "2.25=[[A4(57)!0]]}");

        assertНоты(шаблон2, "[C4(48), A4(57)]");
    }

    @Test
    public void test7() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a);
        Шаблон шаблон2 = шаблон.вместе(шаблон);

        assertШаблон(шаблон2, 0.25, 3,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[A4(57)!0]]}");

        assertНоты(шаблон2, "[C4(48), A4(57)]");
    }

    @Test
    public void test8() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);
        Звук d = Длительность.четверть(ПерваяОктава.D4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a).потом(d);
        Шаблон шаблон2 = шаблон.частьДо(0.75);

        assertШаблон(шаблон, 0.25, 4,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[D4(50)!100], [A4(57)!0]],\n" +
                "1.0=[[D4(50)!0]]}");

        assertШаблон(шаблон2, 0.25, 3,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[D4(50)!0], [A4(57)!0]]}");   // TODO тут [D4(50)!0]]} не должно быть

        assertНоты(шаблон2, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test8_2() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.четверть(ПерваяОктава.A4);
        Звук d = Длительность.четверть(ПерваяОктава.D4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a, d);

        assertШаблон(шаблон, 0.25, 4,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[D4(50)!100], [A4(57)!0]],\n" +
                "1.0=[[D4(50)!0]]}");

        assertНоты(шаблон, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test9() {
        Звук c = Длительность.половина(ПерваяОктава.C4);
        Звук a = Длительность.половина(ПерваяОктава.A4);
        Звук d = Длительность.половина(ПерваяОктава.D4);

        Шаблон шаблон = Шаблон.подряд(c).потом(a).потом(d);
        Шаблон шаблон2 = шаблон.частьДо(0.5);

        assertШаблон(шаблон, 0.5, 3,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "1.0=[[D4(50)!100], [A4(57)!0]],\n" +
                "1.5=[[D4(50)!0]]}");

        assertШаблон(шаблон2, 0.25, 3,
                "{0.0=[[C4(48)!100]],\n" +
                "0.5=[[C4(48)!0], [A4(57)!100]],\n" +
                "0.75=[[D4(50)!0], [A4(57)!0]]}");   // TODO тут [D4(50)!0]]} не должно быть

        assertНоты(шаблон2, "[C4(48), D4(50), A4(57)]");
    }

    @Test
    public void test10() {
        Шаблон шаблон = Parser.parse("H5  ║+     :+     ║\n");

        assertEquals("[[H5(71)!100]]", шаблон.get(0).toString());
        assertEquals("[[H5(71)!0]]",   шаблон.get(1).toString());
        assertEquals("[]",             шаблон.get(5).toString());
        assertEquals("[[H5(71)!100]]", шаблон.get(6).toString());
        assertEquals("[[H5(71)!0]]",   шаблон.get(7).toString());
        assertEquals("[]",             шаблон.get(8).toString());
    }

    @Test
    public void test11() {
        assertEquals("{}", Шаблон.пустой().toString());
    }
}
