package com.apofig;

import com.apofig.parser.Printer;
import org.junit.Test;

import java.util.Arrays;

import static com.apofig.Арпеджиатор.Базовая.обратный;
import static com.apofig.Арпеджиатор.Базовая.прямой;
import static com.apofig.октавы.ВтораяОктава.*;
import static com.apofig.октавы.ПерваяОктава.*;
import static org.junit.Assert.assertEquals;

/**
 * User: sanja
 * Date: 20.01.14
 * Time: 0:40
 */
public class АрпеджиаторTest {

    @Test
    public void fourChords_part1() {
        assertE(Арпеджиатор.FourChords.get(Трезвучие.Мажорное.get(E5)),
                "H5(71)   ║+-+-:+-+-║\n" +
                "Gis5(68) ║+-+-:+-+-║\n" +
                "E5(64)   ║ +-+:-+-+║\n");
    }

    @Test
    public void fourChords_part2() {
        assertE(Арпеджиатор.FourChords.get2(E4),
                "E4(52)   ║+-: +║\n" +
                "E3(40)   ║+-: +║\n");
    }

    @Test
    public void fourChords_part3() {
        assertE(Арпеджиатор.FourChords.get2_2(E4),
                "E4(52)   ║++ +:++  ║\n" +
                "E3(40)   ║+--+:----║\n");
    }

    @Test
    public void fourChords() {
        assertE(Арпеджиатор.FourChords.apply(E5, H4, Cis5, A4),
                "H5(71)   ║+-+-:+-+-║    :    ║    :    ║    :    ║\n" +
                "Gis5(68) ║+-+-:+-+-║    :    ║+-+-:+-+-║    :    ║\n" +
                "Fis5(66) ║    :    ║+-+-:+-+-║    :    ║    :    ║\n" +
                "E5(64)   ║ +-+:-+-+║    :    ║+-+-:+-+-║+-+-:+-+-║\n" +
                "Dis5(63) ║    :    ║+-+-:+-+-║    :    ║    :    ║\n" +
                "Cis5(61) ║    :    ║    :    ║ +-+:-+-+║+-+-:+-+-║\n" +
                "H4(59)   ║    :    ║ +-+:-+-+║    :    ║    :    ║\n" +
                "A4(57)   ║    :    ║    :    ║    :    ║ +-+:-+-+║\n" +
                "E4(52)   ║+---:  +-║    :    ║    :    ║    :    ║\n" +
                "Cis4(49) ║    :    ║    :    ║+---:  +-║    :    ║\n" +
                "H3(47)   ║    :    ║+---:  +-║    :    ║    :    ║\n" +
                "A3(45)   ║    :    ║    :    ║    :    ║+---:  +-║\n" +
                "E3(40)   ║+---:  +-║    :    ║    :    ║    :    ║\n" +
                "Cis3(37) ║    :    ║    :    ║+---:  +-║    :    ║\n" +
                "H2(35)   ║    :    ║+---:  +-║    :    ║    :    ║\n" +
                "A2(33)   ║    :    ║    :    ║    :    ║+---:  +-║\n");
    }

    @Test
    public void подрядВосьмыми_заполненоПаузами() {
        assertE(Арпеджиатор.Подряд.apply(Трезвучие.Мажорное.get(C4), 8),
                "G4(55)   ║  + :    ║\n" +
                "E4(52)   ║ +  :    ║\n" +
                "C4(48)   ║+   :    ║\n");
    }

    @Test
    public void подрядЧетвертыми_заполненоПаузами() {
        assertE(Арпеджиатор.Подряд.apply(Трезвучие.Мажорное.get(C4), 4),
                "G4(55)   ║  :+ ║\n" +
                "E4(52)   ║ +:  ║\n" +
                "C4(48)   ║+ :  ║\n");
    }

    private void assertE(Шаблон шаблон, String expected) {
        assertEquals(expected, Printer.toString(шаблон));
    }

    @Test
    public void подрядЧетвертыми_вместилисьВТакт() {
        assertE(Арпеджиатор.Подряд.apply(Arrays.asList(C4, D4, E4, F4, G4, H4, C5, D5), 8),
                "D5(62)   ║    :   +║\n" +
                "C5(60)   ║    :  + ║\n" +
                "H4(59)   ║    : +  ║\n" +
                "G4(55)   ║    :+   ║\n" +
                "F4(53)   ║   +:    ║\n" +
                "E4(52)   ║  + :    ║\n" +
                "D4(50)   ║ +  :    ║\n" +
                "C4(48)   ║+   :    ║\n");
    }

    @Test
    public void базовая_двумяРуками() {
        assertE(Арпеджиатор.Базовая.вверхВнизДвеРуки(Трезвучие.Минорное, C5, 1, 2),
                "C8(96)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "G7(91)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "Dis7(87) ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "C7(84)   ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║\n" +
                "G6(79)   ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ : +║  :+ ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║\n" +
                "Dis6(75) ║  :  ║  : +║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║\n" +
                "C6(72)   ║  : +║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║\n" +
                "G5(67)   ║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║  : +║  :+ ║ +:  ║+ : +║  :+ ║ +:  ║\n" +
                "Dis5(63) ║ +:  ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ : +║  :+ ║\n" +
                "C5(60)   ║+ : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ : +║\n" +
                "G4(55)   ║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║\n" +
                "Dis4(51) ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║\n" +
                "C4(48)   ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║\n");
    }

    @Test
    public void базовая_однойРукой() {
        assertE(Арпеджиатор.Базовая.вверхВниз(Трезвучие.Мажорное, C4, 3),
                "C8(96)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "G7(91)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "E7(88)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "C7(84)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "G6(79)   ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "E6(76)   ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║\n" +
                "C6(72)   ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║\n" +
                "G5(67)   ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║\n" +
                "E5(64)   ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║  :  ║\n" +
                "C5(60)   ║  : +║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║+ :  ║\n" +
                "G4(55)   ║  :+ ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║ +:  ║\n" +
                "E4(52)   ║ +:  ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║  :+ ║\n" +
                "C4(48)   ║+ :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  :  ║  : +║\n");
    }

    @Test
    public void базовая_вверх() {
        assertE(Арпеджиатор.Базовая.apply(Трезвучие.Мажорное, C4, Обращение::вверх, прямой(), true, 4),
                "C6(72)   ║  :  ║  :  ║  :  ║  : +║\n" +
                "G5(67)   ║  :  ║  :  ║  : +║  :+ ║\n" +
                "E5(64)   ║  :  ║  : +║  :+ ║ +:  ║\n" +
                "C5(60)   ║  : +║  :+ ║ +:  ║+ :  ║\n" +
                "G4(55)   ║  :+ ║ +:  ║+ :  ║  :  ║\n" +
                "E4(52)   ║ +:  ║+ :  ║  :  ║  :  ║\n" +
                "C4(48)   ║+ :  ║  :  ║  :  ║  :  ║\n");
    }

    @Test
    public void базовая_вниз() {
        assertE(Арпеджиатор.Базовая.apply(Трезвучие.Мажорное, C4, Обращение::вниз, обратный(), false, 4),
                "G4(55)   ║+ :  ║  :  ║  :  ║  :  ║\n" +
                "E4(52)   ║ +:  ║+ :  ║  :  ║  :  ║\n" +
                "C4(48)   ║  :+ ║ +:  ║+ :  ║  :  ║\n" +
                "G3(43)   ║  : +║  :+ ║ +:  ║+ :  ║\n" +
                "E3(40)   ║  :  ║  : +║  :+ ║ +:  ║\n" +
                "C3(36)   ║  :  ║  :  ║  : +║  :+ ║\n" +
                "G2(31)   ║  :  ║  :  ║  :  ║  : +║\n");
    }
}
