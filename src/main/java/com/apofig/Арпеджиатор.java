package com.apofig;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Function;

/**
 * User: sanja
 * Date: 20.01.14
 * Time: 0:15
 */
public class Арпеджиатор {

    public static class FourChords {
        public static Шаблон get(List<Нота> ноты) {
            Нота n1 = ноты.get(0);
            Нота n2 = ноты.get(1);
            Нота n3 = ноты.get(2);

            Звук звук1 = Длительность.четверть(n2, n3);
            Шаблон l1 = Шаблон.подряд(звук1, звук1, звук1, звук1);

            Звук звук2 = Длительность.четверть(n1);
            Шаблон l2 = Шаблон.подряд(Пауза.восьмая(), звук2, звук2, звук2, звук2);

            Шаблон l3 = l1.вместе(l2);
            return l3.частьДо(1/l3.длинна());
        }

        public static Шаблон get2(Нота нота) {
            Нота нота2 = нота.ниже(Интервал.ЧистаяОктава);

            Звук звук1 = Длительность.половина(нота, нота2);

            return Шаблон.подряд(звук1, Пауза.четверть(), звук1.увеличить(0.5));
        }

        public static Шаблон get2_2(Нота нота) {
            Нота нота2 = нота.ниже(Интервал.ЧистаяОктава);

            Звук звук1 = Длительность.восьмая(нота);
            Шаблон s1 = Шаблон.подряд(звук1, звук1, Пауза.восьмая(), звук1, звук1, звук1);

            Звук звук2 = Длительность.восьмая(нота2).увеличить(3);
            Звук звук3 = Длительность.восьмая(нота2).увеличить(5);
            Шаблон s2 = Шаблон.подряд(звук2, звук3);

            return s1.вместе(s2);
        }

        public static Шаблон apply(Нота n1, Нота n2, Нота n3, Нота n4) {
            Шаблон l1 = get(Трезвучие.Мажорное.get(n1));
            Шаблон l2 = get(Трезвучие.Мажорное.get(n2));
            Шаблон l3 = get(Трезвучие.Минорное.get(n3));
            Шаблон l4 = get(Трезвучие.Мажорное.get(n4));

            Шаблон s1 = l1.потом(l2, l3, l4);

            Шаблон r1 = get2(n1.ниже(Интервал.ЧистаяОктава));
            Шаблон r2 = get2(n2.ниже(Интервал.ЧистаяОктава));
            Шаблон r3 = get2(n3.ниже(Интервал.ЧистаяОктава));
            Шаблон r4 = get2(n4.ниже(Интервал.ЧистаяОктава));

            Шаблон s2 = r1.потом(r2, r3, r4);

            return s1.вместе(s2);
        }
    }

    public static class Подряд {

        public static Шаблон apply(List<Нота> ноты, int долей) {
            double длительность = 1.0 / долей;
            Шаблон result = Шаблон.пустой();
            for (Нота нота : ноты) {
                result = result.потом(Длительность.взять(длительность, нота));
            }
            int остаток = ноты.size() % долей;
            if (остаток > 0) {
                for (int i = 0; i < долей - остаток; i++) {
                    result = result.потом(Пауза.взять(длительность));
                }
            }
            return result;
        }
    }

    public static class Базовая {
        public static Шаблон apply(Трезвучие трезвучие, Нота основнойТон,
                                   Function<List<Нота>, List<Нота>> преобразователь,
                                   Function<List<Нота>, List<Нота>> перебор,
                                   boolean вверх,
                                   int обращений)
        {
            Шаблон шаблон = Шаблон.пустой();
            List<Нота> аккорд = трезвучие.get(основнойТон);

            do {
                List<Нота> обращено = преобразователь.apply(аккорд);
                аккорд.add(вверх ? аккорд.size() : 0, перебор.apply(обращено).get(обращено.size() - 1));

                шаблон = шаблон.потом(Подряд.apply(перебор.apply(аккорд), 4));
                аккорд = обращено;
            } while (--обращений != 0);

            return шаблон;
        }

        public static Function<List<Нота>, List<Нота>> прямой() {
            return аккорд -> аккорд;
        }

        public static Function<List<Нота>, List<Нота>> обратный() {
            return аккорд -> {
                LinkedList<Нота> result = new LinkedList<>(аккорд);
                Collections.reverse(result);
                return result;
            };
        }

        public static Шаблон вверхВниз(Трезвучие трезвучие, Нота основнойТон, int октав) {
            Шаблон вверх = apply(трезвучие, основнойТон, Обращение::вверх, прямой(), true, 3 * октав + 1);
            Шаблон вниз = apply(трезвучие, основнойТон.наОктавуВыше(октав), Обращение::вниз, обратный(), false, 3 * октав);
            return вверх.потом(вниз);
        }

        public static Шаблон вверхВнизДвеРуки(Трезвучие трезвучие, Нота основнойТон, int разница, int октав) {
            Шаблон left = вверхВниз(трезвучие, основнойТон, октав);
            Шаблон right = вверхВниз(трезвучие, основнойТон.наОктавуНиже(разница), октав);
            return left.вместе(right);
        }
    }
}
